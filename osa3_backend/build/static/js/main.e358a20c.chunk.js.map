{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","services_persons","console","log","axios","get","then","response","data","newObject","post","id","concat","delete","put","PersonForm","props","react_default","a","createElement","onSubmit","addPerson","value","newName","onChange","handleAddPerson","newNumber","handleAddNumber","type","Persons","setPersons","persons","setErrorMessage","map","person","key","name","number","App_Button","Button","onClick","window","confirm","personService","filter","className","message","setTimeout","catch","error","Filter","showAll","handleFilter","Notification","_ref","App","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setShowAll","_useState9","_useState10","errorMessage","useEffect","initialPersons","personsToShow","toLowerCase","indexOf","App_Notification","App_Filter","event","target","App_PersonForm","preventDefault","personObject","length","returnedPerson","createdPerson","errorNotice","App_Persons","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e358a20c.chunk.js","sourcesContent":["\nimport axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    console.log('getAll')\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl ,newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteObject = id => {\n    console.log(`poistetaan person id:ll채 ${id}`)\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    console.log('p채ivitet채채n numero')\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default {\n    getAll,\n    create,\n    deleteObject,\n    update\n}","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport './App.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ showAll, setShowAll ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState({\n    className: '',\n    message: ''\n  })\n\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(initialPersons => {\n        console.log('promise fulfilled')\n        console.log('response: ', initialPersons)\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = event => {\n    event.preventDefault()\n    console.log('button clicked', event.target.value)\n    const person = persons.filter(person => person.name === newName)\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    if(person.length > 0){\n      const id = person[0].id\n      \n      const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if(result === true){\n        personService\n          .update(id, personObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setErrorMessage({\n              className: 'notice', \n              message: `Edited ${returnedPerson.name}`\n            })\n            setTimeout(() => {\n              const empty = {\n                className: '',\n                message: ''\n              }\n              setErrorMessage(empty)\n            }, 3000)\n          })\n          .catch(error => {\n            console.log(error.response.data.error)        \n            setTimeout(() => {\n              const empty = {\n                className: '',\n                message: ''\n              }\n              setErrorMessage(empty)\n            }, 5000)\n\n         // setPersons(persons.filter(person => \n         //   person.id !== id\n         // ))\n        })\n      }\n    }else{\n      personService\n        .create(personObject)\n        .then(createdPerson => {\n          console.log(createdPerson)\n          setPersons(persons.concat(createdPerson))\n          setErrorMessage({\n            className: 'notice',\n            message: `Added ${createdPerson.name}`\n          })\n          setTimeout(() => {\n            const empty = {\n              className: '',\n              message: ''\n            }\n            setErrorMessage(empty)\n          }, 3000)\n        })\n        .catch(error => {\n          console.log(error.response.data.error)\n          const errorNotice = {\n            className: 'error',\n            message: error.response.data.error\n          }\n          setErrorMessage(errorNotice)\n          setTimeout(() => {\n            const emptyNotice = {\n              className: '',\n              message: ''\n            }\n            setErrorMessage(emptyNotice)\n          }, 3000)\n        })\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n \nconst handleAddNumber = (event) => {\n  setNewNumber(event.target.value)\n}\n\nconst handleAddPerson = (event) => {\n  console.log('event: ', event.target.value)\n  setNewName(event.target.value)\n}\n\nconst handleFilter = (event) => {\n  setShowAll(event.target.value)\n}\n\nconst personsToShow = showAll\n  ? persons.filter(person => person.name.toLowerCase().indexOf(showAll) > -1)\n  : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>  \n      <Notification className={errorMessage.className} message={errorMessage.message} />\n      filter shown with:\n      <Filter showAll={showAll} handleFilter={handleFilter} />\n      <h2>add a new</h2>\n      <PersonForm addPerson={addPerson} newName={newName} handleAddPerson={handleAddPerson} newNumber={newNumber} handleAddNumber={handleAddNumber}/>\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} setPersons={setPersons} setErrorMessage={setErrorMessage} />\n    </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>\n        name:\n        <input\n        value={props.newName}\n        onChange={props.handleAddPerson}\n        />\n      </div>\n      <div>\n        number:\n        <input\n        value={props.newNumber}\n        onChange={props.handleAddNumber}\n        />\n      </div>\n      <button type=\"submit\">add</button>\n    </form>\n  )\n}\n\nconst Persons = (props) => {\n  const setPersons = props.setPersons\n  const persons = props.persons\n  const setErrorMessage = props.setErrorMessage\n  return (\n    persons.map(person =>      \n      <div key={person.id}>\n        {person.name} {person.number} <Button id={person.id} name={person.name} persons={persons} setPersons={setPersons} setErrorMessage={setErrorMessage} />\n      </div>  \n    )\n  )\n}\n\nconst Button = (props) => {\n  const setPersons = props.setPersons\n  const setErrorMessage = props.setErrorMessage\n  const persons = props.persons\n  const id = props.id\n  const name = props.name\n  const handleClick = () => {\n    const result = window.confirm(`Delete ${props.name}?`)\n    if(result === true){\n      personService\n      .deleteObject(id)\n      .then(response => {\n        console.log('response: ', response)\n        setPersons(persons.filter(person => person.id !== id))\n        setErrorMessage({\n          className: 'notice',\n          message: `Deleted ${name}`\n        })\n        setTimeout(() => {\n          const empty = {\n            className: '',\n            message: ''\n          }\n          setErrorMessage(empty)\n        }, 3000)       \n      })\n      .catch(error => {\n        console.log('error', error.response.data.error)\n        setErrorMessage({\n          className: 'error',\n          message: error.response.data.error\n        })\n        setTimeout(() => {\n          const empty = {\n            className: '',\n            message: ''\n          }\n          setErrorMessage(empty)\n        }, 3000)\n        setPersons(persons.filter(person => person.id !== id))\n      }) \n    }\n  }\n  return (\n    <button onClick={handleClick}>delete</button>\n  )\n}\n\nconst Filter = (props) => {\n  return (\n    <input\n      value={props.showAll}\n      onChange={props.handleFilter}\n    />\n  )\n}\n\nconst Notification = ({ className, message }) => {\n // console.log('message:', message)\n  if(message === ''){\n    return null\n  }\n  return (\n    <div className={className}>\n    {message}\n  </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}